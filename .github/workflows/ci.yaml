---
name: CI

on:
  push:
  pull_request:

env:
  REGISTRY: ghcr.io
  OWNER_AND_REPO: ${{ github.repository }}

jobs:
  yamllint:
    uses: theautomation/github-actions/.github/workflows/yamllint.yaml@main

  home-assistant-config-check:
    uses: theautomation/github-actions/.github/workflows/home-assistant-config-check.yaml@main
    with:
      version: stable
      # secret-file-path: "./src/config/secrets.yaml.example"
      # configuration-path: "./src/config"

#   build-and-push-image:
#     name: Build and Push Image
#     needs: [home-assistant-config]
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@main

#       - name: Log in to the Container registry
#         uses: docker/login-action@v3
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Extract metadata (tags, labels) for Docker
#         id: meta
#         uses: docker/metadata-action@v5
#         with:
#           images: ${{ env.REGISTRY }}/${{ env.OWNER_AND_REPO }}
#           tags: |
#             type=ref,event=branch
#             type=sha

#       - name: Build and push
#         uses: docker/build-push-action@v5
#         with:
#           context: .
#           push: true
#           tags: ${{ steps.meta.outputs.tags }}
#           labels: ${{ steps.meta.outputs.labels }}

# trigger-manifest-update:
#   name: Trigger Remote Action
#   # needs: [build-and-push-image]
#   runs-on: ubuntu-latest
#   steps:
#     - name: Trigger
#       run: |
#         curl -XPOST \
#           -H 'Authorization:token *****' \
#           -H "Content-Type:application/json" \
#           -H "Accept:application/vnd.github" \
#           https://api.github.com/repos/theautomation/gitops/actions/workflows/update_manifest.yaml/dispatches \
#           --data '{"ref": "main", "inputs": {"OWNER_AND_REPO":"${{ github.repository }}","registry":"${{ env.REGISTRY }}","image_tag":"${{ github.sha }}"}}'
