---
kind: pipeline
name: validate

steps:
  - name: prettier
    image: tmknom/prettier:latest
    commands:
      - prettier --check "./config/**/*.yaml"

  - name: yamllint
    image: sdesbure/yamllint:latest
    commands:
      - yamllint -c ./.yamllint .

  - name: docker-compose
    image: tmaier/docker-compose:latest
    commands:
      - mv prd-${DRONE_REPO_NAME}-app.env.example prd-${DRONE_REPO_NAME}-app.env
      - mv prd-${DRONE_REPO_NAME}-db.env.example prd-${DRONE_REPO_NAME}-db.env
      - docker-compose config -q

---
kind: pipeline
name: test

steps:
  - name: latest
    image: homeassistant/home-assistant:latest
    pull: always
    commands:
      - mv config/secrets.yaml.example config/secrets.yaml
      - mv config/google_assistant/google_service_account.json.example config/google_assistant/google_service_account.json
      - python -m homeassistant --script check_config --config ./config/

  - name: dev
    image: homeassistant/home-assistant:dev
    pull: always
    failure: ignore
    commands:
      - python -m homeassistant --script check_config --config ./config/

  - name: beta
    image: homeassistant/home-assistant:beta
    pull: always
    failure: ignore
    commands:
      - python -m homeassistant --script check_config --config ./config/

---
kind: pipeline
type: docker
name: build

depends_on:
  - validate
  - test

steps:
  - name: publish app
    image: plugins/docker
    settings:
      username:
        from_secret: docker-registry-username
      password:
        from_secret: docker-registry-password
      registry: docker-registry.theautomation.nl
      repo: docker-registry.theautomation.nl/coen/prd-${DRONE_REPO_NAME}-app
      dockerfile: app.dockerfile
      auto_tag: true

  - name: publish db
    image: plugins/docker
    settings:
      username:
        from_secret: docker-registry-username
      password:
        from_secret: docker-registry-password
      registry: docker-registry.theautomation.nl
      repo: docker-registry.theautomation.nl/coen/prd-${DRONE_REPO_NAME}-db
      dockerfile: db.dockerfile
      auto_tag: true

---
kind: pipeline
type: docker
name: upgrade

depends_on:
  - build

steps:
  - name: upgrade
    image: appleboy/drone-ssh
    secrets: [docker-registry-username, docker-registry-password]
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - cd /home/coen/docker-home-services/${DRONE_REPO_NAME}/
        - git pull
        - docker login docker-registry.theautomation.nl -u ${DOCKER_REGISTRY_USERNAME} -p ${DOCKER_REGISTRY_PASSWORD}
        - docker-compose pull

  - name: deploy
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - cd /home/coen/docker-home-services/${DRONE_REPO_NAME}/
        - docker-compose up -d

  - name: clean
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_user
      password:
        from_secret: ssh_password
      port: 22
      script:
        - cd /home/coen/docker-home-services/${DRONE_REPO_NAME}/
        - docker image prune -f

---
kind: pipeline
name: notify webhook

trigger:
  status:
    - success
    - failure

depends_on:
  - upgrade

steps:
  - name: send
    image: plugins/webhook
    settings:
      username:
        from_secret: nodered_endpoint_username
      password:
        from_secret: nodered_endpoint_password
      urls: http://docker-host.lan:1880/drone/notify
      skip_verify: true
      content_type: application/json
      template: |
        {
          "owner": "{{ repo.owner }}",
          "repo": "{{ repo.name }}",
          "status": "{{ build.status }}",
          "buildnumber": "{{ build.number }}",
          "buildlink": "{{ build.link }}"
        }
